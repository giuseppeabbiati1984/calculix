#!/usr/bin/env python

###
### This file is generated automatically by SALOME v9.12.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
import salome_notebook
notebook = salome_notebook.NoteBook()
sys.path.insert(0, r'C:/repositories/calculix/v2_21/to_compile/calculix_run')

###
### SHAPER component
###

from salome.shaper import model

model.begin()
partSet = model.moduleDocument()

### Create Part
Part_1 = model.addPart(partSet)
Part_1_doc = Part_1.document()

model.end()

###
### SHAPERSTUDY component
###

###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS


geompy = geomBuilder.New()

O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
Vertex_1 = geompy.MakeVertex(0, 0, 0)
Vertex_2 = geompy.MakeVertex(0.5, 0, 0)
Vertex_3 = geompy.MakeVertex(1, 0, 0)
Vertex_4 = geompy.MakeVertex(1, 0.9, 0)
Vertex_5 = geompy.MakeVertex(0.5, 0.9, 0)
Vertex_6 = geompy.MakeVertex(0, 0.9, 0)
mmmm = geompy.MakeVertex(0, 2.5, 0)
Vertex_8 = geompy.MakeVertex(0.5, 3, 0)
Vertex_9 = geompy.MakeVertex(0, 5, 0)
Vertex_10 = geompy.MakeVertex(0.5, 5, 0)
Vertex_11 = geompy.MakeVertex(1, 5, 0)
Vertex_12 = geompy.MakeVertex(1, 3, 0)
Vertex_7 = geompy.MakeVertex(0, 3, 0)
Line_1 = geompy.MakeLineTwoPnt(Vertex_2, Vertex_1)
Line_2 = geompy.MakeLineTwoPnt(Vertex_2, Vertex_3)
Line_3 = geompy.MakeLineTwoPnt(Vertex_3, Vertex_4)
Line_4 = geompy.MakeLineTwoPnt(Vertex_4, Vertex_5)
Line_5 = geompy.MakeLineTwoPnt(Vertex_5, Vertex_6)
Line_6 = geompy.MakeLineTwoPnt(Vertex_6, Vertex_7)
Line_7 = geompy.MakeLineTwoPnt(Vertex_7, Vertex_8)
Line_8 = geompy.MakeLineTwoPnt(Vertex_8, Vertex_12)
Line_9 = geompy.MakeLineTwoPnt(Vertex_12, Vertex_11)
Line_10 = geompy.MakeLineTwoPnt(Vertex_11, Vertex_10)
Line_11 = geompy.MakeLineTwoPnt(Vertex_10, Vertex_9)
Line_12 = geompy.MakeLineTwoPnt(Vertex_9, Vertex_7)
Line_13 = geompy.MakeLineTwoPnt(Vertex_8, Vertex_10)
Line_14 = geompy.MakeLineTwoPnt(Vertex_5, Vertex_2)
Line_15 = geompy.MakeLineTwoPnt(Vertex_5, Vertex_8)
Line_16 = geompy.MakeLineTwoPnt(Vertex_1, Vertex_6)
Face_1 = geompy.MakeFaceWires([Line_1, Line_5, Line_14, Line_16], 1)
Face_2 = geompy.MakeFaceWires([Line_2, Line_3, Line_4, Line_14], 1)
Face_3 = geompy.MakeFaceWires([Line_5, Line_6, Line_7, Line_15], 1)
Face_4 = geompy.MakeFaceWires([Line_7, Line_11, Line_12, Line_13], 1)
Face_5 = geompy.MakeFaceWires([Line_8, Line_9, Line_10, Line_13], 1)
faces_to_extrude = geompy.MakeCompound([Face_1, Face_2, Face_3, Face_4, Face_5])
Extrusion_6 = geompy.MakePrismVecH(faces_to_extrude, OZ, -50)
[cucrzr_1,cucrzr_2,nickel_1,cucrzr_3,nickel_2] = geompy.ExtractShapes(Extrusion_6, geompy.ShapeType["SOLID"], True)
camera = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(camera, [4, 38])
canale = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(canale, [55, 96, 140])
cut1 = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(cut1, [34, 68, 102, 136, 170])
symm1 = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(symm1, [48, 150])
symm2 = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(symm2, [14, 82, 130])
cut2 = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(cut2, [32, 66, 100, 134, 168])
long_lines = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["EDGE"])
geompy.UnionIDs(long_lines, [6, 9, 16, 23, 40, 43, 50, 57, 74, 77, 84, 91, 108, 111, 118, 125, 142, 145, 152, 159])
section_lines = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["EDGE"])
geompy.UnionIDs(section_lines, [12, 13, 19, 20, 26, 27, 30, 31, 46, 47, 53, 54, 60, 61, 64, 65, 80, 81, 88, 94, 95, 98, 99, 114, 115, 121, 122, 128, 129, 132, 133, 148, 155, 156, 162, 163, 166, 167])
[camera, canale, cut1, symm1, symm2, cut2, long_lines, section_lines] = geompy.GetExistingSubObjects(Extrusion_6, False)
seclines = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["EDGE"])
geompy.UnionIDs(seclines, [12, 13, 19, 20, 26, 27, 30, 31, 46, 47, 53, 54, 60, 61, 64, 65, 80, 81, 87, 88, 94, 95, 98, 99, 114, 115, 121, 122, 128, 129, 132, 133, 148, 149, 155, 156, 162, 163, 166, 167])
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( Vertex_1, 'Vertex_1' )
geompy.addToStudy( Vertex_2, 'Vertex_2' )
geompy.addToStudy( Vertex_3, 'Vertex_3' )
geompy.addToStudy( Vertex_4, 'Vertex_4' )
geompy.addToStudy( Vertex_5, 'Vertex_5' )
geompy.addToStudy( Vertex_6, 'Vertex_6' )
geompy.addToStudy( mmmm, 'mmmm' )
geompy.addToStudy( Vertex_8, 'Vertex_8' )
geompy.addToStudy( Vertex_9, 'Vertex_9' )
geompy.addToStudy( Vertex_10, 'Vertex_10' )
geompy.addToStudy( Vertex_11, 'Vertex_11' )
geompy.addToStudy( Vertex_12, 'Vertex_12' )
geompy.addToStudy( Vertex_7, 'Vertex_7' )
geompy.addToStudy( Line_1, 'Line_1' )
geompy.addToStudy( Line_2, 'Line_2' )
geompy.addToStudy( Line_3, 'Line_3' )
geompy.addToStudy( Line_4, 'Line_4' )
geompy.addToStudy( Line_5, 'Line_5' )
geompy.addToStudy( Line_6, 'Line_6' )
geompy.addToStudy( Line_7, 'Line_7' )
geompy.addToStudy( Line_8, 'Line_8' )
geompy.addToStudy( Line_9, 'Line_9' )
geompy.addToStudy( Line_10, 'Line_10' )
geompy.addToStudy( Line_11, 'Line_11' )
geompy.addToStudy( Line_12, 'Line_12' )
geompy.addToStudy( Line_13, 'Line_13' )
geompy.addToStudy( Line_14, 'Line_14' )
geompy.addToStudy( Line_15, 'Line_15' )
geompy.addToStudy( Line_16, 'Line_16' )
geompy.addToStudy( Face_1, 'Face_1' )
geompy.addToStudy( Face_2, 'Face_2' )
geompy.addToStudy( Face_3, 'Face_3' )
geompy.addToStudy( Face_4, 'Face_4' )
geompy.addToStudy( Face_5, 'Face_5' )
geompy.addToStudy( faces_to_extrude, 'faces_to_extrude' )
geompy.addToStudy( Extrusion_6, 'Extrusion_6' )
geompy.addToStudyInFather( Extrusion_6, camera, 'camera' )
geompy.addToStudyInFather( Extrusion_6, canale, 'canale' )
geompy.addToStudyInFather( Extrusion_6, cut1, 'cut1' )
geompy.addToStudyInFather( Extrusion_6, symm1, 'symm1' )
geompy.addToStudyInFather( Extrusion_6, symm2, 'symm2' )
geompy.addToStudyInFather( Extrusion_6, cut2, 'cut2' )
geompy.addToStudyInFather( Extrusion_6, long_lines, 'long_lines' )
geompy.addToStudyInFather( Extrusion_6, section_lines, 'section_lines' )
geompy.addToStudyInFather( Extrusion_6, cucrzr_1, 'cucrzr_1' )
geompy.addToStudyInFather( Extrusion_6, cucrzr_2, 'cucrzr_2' )
geompy.addToStudyInFather( Extrusion_6, nickel_1, 'nickel_1' )
geompy.addToStudyInFather( Extrusion_6, cucrzr_3, 'cucrzr_3' )
geompy.addToStudyInFather( Extrusion_6, nickel_2, 'nickel_2' )
geompy.addToStudyInFather( Extrusion_6, seclines, 'seclines' )

###
### SMESH component
###

import  SMESH, SALOMEDS
from salome.smesh import smeshBuilder

smesh = smeshBuilder.New()
#smesh.SetEnablePublish( False ) # Set to False to avoid publish in study if not needed or in some particular situations:
                                 # multiples meshes built in parallel, complex and numerous mesh edition (performance)

Local_Length_1 = smesh.CreateHypothesis('LocalLength')
Local_Length_1.SetLength( 0.1 )
Local_Length_1.SetPrecision( 1e-07 )
Regular_1D = smesh.CreateHypothesis('Regular_1D')
Quadrangle_2D = smesh.CreateHypothesis('Quadrangle_2D')
Hexa_3D = smesh.CreateHypothesis('Hexa_3D')
Local_Length_2 = smesh.CreateHypothesis('LocalLength')
Local_Length_2.SetLength( 0.15 )
Local_Length_2.SetPrecision( 1e-07 )
Mesh_2 = smesh.Mesh(Extrusion_6,'Mesh_2')
status = Mesh_2.AddHypothesis(Regular_1D)
status = Mesh_2.AddHypothesis(Quadrangle_2D)
status = Mesh_2.AddHypothesis(Hexa_3D)
camera_1 = Mesh_2.GroupOnGeom(camera,'camera',SMESH.FACE)
canale_1 = Mesh_2.GroupOnGeom(canale,'canale',SMESH.FACE)
cut1_1 = Mesh_2.GroupOnGeom(cut1,'cut1',SMESH.FACE)
symm1_1 = Mesh_2.GroupOnGeom(symm1,'symm1',SMESH.FACE)
symm2_1 = Mesh_2.GroupOnGeom(symm2,'symm2',SMESH.FACE)
cut2_1 = Mesh_2.GroupOnGeom(cut2,'cut2',SMESH.FACE)
long_lines_1 = Mesh_2.GroupOnGeom(long_lines,'long_lines',SMESH.EDGE)
section_lines_1 = Mesh_2.GroupOnGeom(section_lines,'section_lines',SMESH.EDGE)
Number_of_Segments_1 = smesh.CreateHypothesis('NumberOfSegments')
Number_of_Segments_1.SetNumberOfSegments( 15 )
status = Mesh_2.AddHypothesis(Regular_1D,long_lines)
Local_Length_3 = smesh.CreateHypothesis('LocalLength')
Local_Length_3.SetLength( 0.1 )
Local_Length_3.SetPrecision( 1e-07 )
smeshObj_1 = Mesh_2.GetSubMesh( section_lines, 'Sub-mesh_2' )
status = Mesh_2.AddHypothesis(Regular_1D,section_lines)
status = Mesh_2.AddHypothesis(Local_Length_3,section_lines)
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.FACE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,'camera')
aCriteria.append(aCriterion)
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'camera')
aCriteria.append(aCriterion)
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
Local_Length_4 = smesh.CreateHypothesis('LocalLength')
Local_Length_4.SetLength( 0.1 )
Local_Length_4.SetPrecision( 1e-07 )
status = Mesh_2.AddHypothesis(Local_Length_4)
isDone = Mesh_2.Compute()
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'symm1')
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'symm2')
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'cut1')
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'cut2')
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'camera')
aCriteria.append(aCriterion)
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'canale')
aCriteria.append(aCriterion)
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cut1)
aCriteria.append(aCriterion)
aFilter_9 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_9.SetMesh(Mesh_2.GetMesh())
cut_nodes1 = Mesh_2.GroupOnFilter( SMESH.NODE, 'cut_nodes1', aFilter_9 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cut2)
aCriteria.append(aCriterion)
aFilter_10 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_10.SetMesh(Mesh_2.GetMesh())
cut_nodes2 = Mesh_2.GroupOnFilter( SMESH.NODE, 'cut_nodes2', aFilter_10 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cucrzr_1)
aCriteria.append(aCriterion)
aFilter_11 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_11.SetMesh(Mesh_2.GetMesh())
cucrzr_1_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'cucrzr_1', aFilter_11 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cucrzr_2)
aCriteria.append(aCriterion)
aFilter_12 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_12.SetMesh(Mesh_2.GetMesh())
cucrzr_2_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'cucrzr_2', aFilter_12 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cucrzr_3)
aCriteria.append(aCriterion)
aFilter_13 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_13.SetMesh(Mesh_2.GetMesh())
cucrzr_3_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'cucrzr_3', aFilter_13 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,nickel_1)
aCriteria.append(aCriterion)
aFilter_14 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_14.SetMesh(Mesh_2.GetMesh())
nickel_1_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'nickel_1', aFilter_14 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,nickel_2)
aCriteria.append(aCriterion)
aFilter_15 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_15.SetMesh(Mesh_2.GetMesh())
nickel_2_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'nickel_2', aFilter_15 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,symm1)
aCriteria.append(aCriterion)
aFilter_16 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_16.SetMesh(Mesh_2.GetMesh())
symm_nodes1 = Mesh_2.GroupOnFilter( SMESH.NODE, 'symm_nodes1', aFilter_16 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,symm2)
aCriteria.append(aCriterion)
aFilter_17 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_17.SetMesh(Mesh_2.GetMesh())
symm_nodes2 = Mesh_2.GroupOnFilter( SMESH.NODE, 'symm_nodes2', aFilter_17 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
try:
  Mesh_2.ExportUNV( r'/media/sf_condiviso_VM/hyprob/Mesh_4.unv' )
  pass
except:
  print('ExportUNV() failed. Invalid file name?')
Local_Length_5 = smesh.CreateHypothesis('LocalLength')
Local_Length_5.SetLength( 0.05 )
Local_Length_5.SetPrecision( 1e-07 )
Sub_mesh_3 = Mesh_2.GetSubMesh( seclines, 'Sub-mesh_3' )
status = Mesh_2.AddHypothesis(Regular_1D,seclines)
status = Mesh_2.AddHypothesis(Local_Length_5,seclines)
isDone = Mesh_2.SetMeshOrder( [ [ smeshObj_1, Sub_mesh_3 ] ])
Mesh_2.GetMesh().RemoveSubMesh( smeshObj_1 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
Number_of_Segments_2 = smesh.CreateHypothesis('NumberOfSegments')
Number_of_Segments_2.SetNumberOfSegments( 40 )
status = Mesh_2.AddHypothesis(Number_of_Segments_2,long_lines)
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
Mesh_2.SetAutoColor( 1 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
camera_1.SetColor( SALOMEDS.Color( 0.396078, 0.8, 0.396078 ))
canale_1.SetColor( SALOMEDS.Color( 0.396078, 0.8, 0.8 ))
cut1_1.SetColor( SALOMEDS.Color( 0.396078, 0.396078, 0.8 ))
symm1_1.SetColor( SALOMEDS.Color( 0.8, 0.396078, 0.8 ))
symm2_1.SetColor( SALOMEDS.Color( 0.6, 0.298039, 0.298039 ))
cut2_1.SetColor( SALOMEDS.Color( 0.6, 0.6, 0.298039 ))
long_lines_1.SetColor( SALOMEDS.Color( 0.298039, 0.6, 0.298039 ))
section_lines_1.SetColor( SALOMEDS.Color( 0.298039, 0.6, 0.6 ))
cut_nodes1.SetColor( SALOMEDS.Color( 0.298039, 0.298039, 0.6 ))
cut_nodes2.SetColor( SALOMEDS.Color( 0.6, 0.298039, 0.6 ))
cucrzr_1_1.SetColor( SALOMEDS.Color( 0.4, 0.2, 0.2 ))
cucrzr_2_1.SetColor( SALOMEDS.Color( 0.4, 0.4, 0.2 ))
cucrzr_3_1.SetColor( SALOMEDS.Color( 0.2, 0.4, 0.2 ))
nickel_1_1.SetColor( SALOMEDS.Color( 0.2, 0.4, 0.4 ))
nickel_2_1.SetColor( SALOMEDS.Color( 0.2, 0.2, 0.4 ))
symm_nodes1.SetColor( SALOMEDS.Color( 0.4, 0.2, 0.4 ))
symm_nodes2.SetColor( SALOMEDS.Color( 1, 0, 0 ))
isDone = Mesh_2.Compute()
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
Sub_mesh_1 = Mesh_2.GetSubMesh( long_lines, 'Sub-mesh_1' )

## some objects were removed
aStudyBuilder = salome.myStudy.NewBuilder()
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_1))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)

## Set names of Mesh objects
smesh.SetName(long_lines_1, 'long_lines')
smesh.SetName(symm_nodes2, 'symm_nodes2')
smesh.SetName(cut_nodes1, 'cut_nodes1')
smesh.SetName(Regular_1D, 'Regular_1D')
smesh.SetName(symm_nodes1, 'symm_nodes1')
smesh.SetName(Hexa_3D, 'Hexa_3D')
smesh.SetName(cut_nodes2, 'cut_nodes2')
smesh.SetName(Quadrangle_2D, 'Quadrangle_2D')
smesh.SetName(Local_Length_2, 'Local Length_2')
smesh.SetName(Number_of_Segments_1, 'Number of Segments_1')
smesh.SetName(Local_Length_1, 'Local Length_1')
smesh.SetName(cucrzr_1_1, 'cucrzr_1')
smesh.SetName(cucrzr_2_1, 'cucrzr_2')
smesh.SetName(Local_Length_4, 'Local Length_4')
smesh.SetName(cucrzr_3_1, 'cucrzr_3')
smesh.SetName(Local_Length_3, 'Local Length_3')
smesh.SetName(nickel_1_1, 'nickel_1')
smesh.SetName(nickel_2_1, 'nickel_2')
smesh.SetName(Local_Length_5, 'Local Length_5')
smesh.SetName(Number_of_Segments_2, 'Number of Segments_2')
smesh.SetName(Sub_mesh_1, 'Sub-mesh_1')
smesh.SetName(Sub_mesh_3, 'Sub-mesh_3')
smesh.SetName(Mesh_2.GetMesh(), 'Mesh_2')
smesh.SetName(cut2_1, 'cut2')
smesh.SetName(symm2_1, 'symm2')
smesh.SetName(symm1_1, 'symm1')
smesh.SetName(cut1_1, 'cut1')
smesh.SetName(canale_1, 'canale')
smesh.SetName(camera_1, 'camera')
smesh.SetName(section_lines_1, 'section_lines')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser()
