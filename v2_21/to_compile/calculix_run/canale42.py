#!/usr/bin/env python

###
### This file is generated automatically by SALOME v9.12.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
import salome_notebook
notebook = salome_notebook.NoteBook()
sys.path.insert(0, r'C:/repositories/calculix/v2_21/to_compile/calculix_run')

###
### SHAPER component
###

from salome.shaper import model

model.begin()
partSet = model.moduleDocument()

### Create Part
Part_1 = model.addPart(partSet)
Part_1_doc = Part_1.document()

model.end()

###
### SHAPERSTUDY component
###

###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS


geompy = geomBuilder.New()

O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
Vertex_1 = geompy.MakeVertex(0, 0, 0)
Vertex_2 = geompy.MakeVertex(0.5, 0, 0)
Vertex_3 = geompy.MakeVertex(1, 0, 0)
Vertex_4 = geompy.MakeVertex(1, 0.9, 0)
Vertex_5 = geompy.MakeVertex(0.5, 0.9, 0)
Vertex_6 = geompy.MakeVertex(0, 0.9, 0)
mmmm = geompy.MakeVertex(0, 2.5, 0)
Vertex_8 = geompy.MakeVertex(0.5, 3, 0)
Vertex_9 = geompy.MakeVertex(0, 5, 0)
Vertex_10 = geompy.MakeVertex(0.5, 5, 0)
Vertex_11 = geompy.MakeVertex(1, 5, 0)
Vertex_12 = geompy.MakeVertex(1, 3, 0)
Vertex_7 = geompy.MakeVertex(0, 3, 0)
Line_1 = geompy.MakeLineTwoPnt(Vertex_2, Vertex_1)
Line_2 = geompy.MakeLineTwoPnt(Vertex_2, Vertex_3)
Line_3 = geompy.MakeLineTwoPnt(Vertex_3, Vertex_4)
Line_4 = geompy.MakeLineTwoPnt(Vertex_4, Vertex_5)
Line_5 = geompy.MakeLineTwoPnt(Vertex_5, Vertex_6)
Line_6 = geompy.MakeLineTwoPnt(Vertex_6, Vertex_7)
Line_7 = geompy.MakeLineTwoPnt(Vertex_7, Vertex_8)
Line_8 = geompy.MakeLineTwoPnt(Vertex_8, Vertex_12)
Line_9 = geompy.MakeLineTwoPnt(Vertex_12, Vertex_11)
Line_10 = geompy.MakeLineTwoPnt(Vertex_11, Vertex_10)
Line_11 = geompy.MakeLineTwoPnt(Vertex_10, Vertex_9)
Line_12 = geompy.MakeLineTwoPnt(Vertex_9, Vertex_7)
Line_13 = geompy.MakeLineTwoPnt(Vertex_8, Vertex_10)
Line_14 = geompy.MakeLineTwoPnt(Vertex_5, Vertex_2)
Line_15 = geompy.MakeLineTwoPnt(Vertex_5, Vertex_8)
Line_16 = geompy.MakeLineTwoPnt(Vertex_1, Vertex_6)
Face_1 = geompy.MakeFaceWires([Line_1, Line_5, Line_14, Line_16], 1)
Face_2 = geompy.MakeFaceWires([Line_2, Line_3, Line_4, Line_14], 1)
Face_3 = geompy.MakeFaceWires([Line_5, Line_6, Line_7, Line_15], 1)
Face_4 = geompy.MakeFaceWires([Line_7, Line_11, Line_12, Line_13], 1)
Face_5 = geompy.MakeFaceWires([Line_8, Line_9, Line_10, Line_13], 1)
faces_to_extrude = geompy.MakeCompound([Face_1, Face_2, Face_3, Face_4, Face_5])
Extrusion_6 = geompy.MakePrismVecH(faces_to_extrude, OZ, -50)
[cucrzr_1,cucrzr_2,nickel_1,cucrzr_3,nickel_2] = geompy.ExtractShapes(Extrusion_6, geompy.ShapeType["SOLID"], True)
camera = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(camera, [4, 38])
canale = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(canale, [55, 96, 140])
cut1 = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(cut1, [34, 68, 102, 136, 170])
symm1 = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(symm1, [48, 150])
symm2 = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(symm2, [14, 82, 130])
cut2 = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["FACE"])
geompy.UnionIDs(cut2, [32, 66, 100, 134, 168])
long_lines = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["EDGE"])
geompy.UnionIDs(long_lines, [6, 9, 16, 23, 40, 43, 50, 57, 74, 77, 84, 91, 108, 111, 118, 125, 142, 145, 152, 159])
section_lines = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["EDGE"])
geompy.UnionIDs(section_lines, [12, 13, 19, 20, 26, 27, 30, 31, 46, 47, 53, 54, 60, 61, 64, 65, 80, 81, 88, 94, 95, 98, 99, 114, 115, 121, 122, 128, 129, 132, 133, 148, 155, 156, 162, 163, 166, 167])
[camera, canale, cut1, symm1, symm2, cut2, long_lines, section_lines] = geompy.GetExistingSubObjects(Extrusion_6, False)
seclines = geompy.CreateGroup(Extrusion_6, geompy.ShapeType["EDGE"])
geompy.UnionIDs(seclines, [12, 13, 19, 20, 26, 27, 30, 31, 46, 47, 53, 54, 60, 61, 64, 65, 80, 81, 87, 88, 94, 95, 98, 99, 114, 115, 121, 122, 128, 129, 132, 133, 148, 149, 155, 156, 162, 163, 166, 167])
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( Vertex_1, 'Vertex_1' )
geompy.addToStudy( Vertex_2, 'Vertex_2' )
geompy.addToStudy( Vertex_3, 'Vertex_3' )
geompy.addToStudy( Vertex_4, 'Vertex_4' )
geompy.addToStudy( Vertex_5, 'Vertex_5' )
geompy.addToStudy( Vertex_6, 'Vertex_6' )
geompy.addToStudy( mmmm, 'mmmm' )
geompy.addToStudy( Vertex_8, 'Vertex_8' )
geompy.addToStudy( Vertex_9, 'Vertex_9' )
geompy.addToStudy( Vertex_10, 'Vertex_10' )
geompy.addToStudy( Vertex_11, 'Vertex_11' )
geompy.addToStudy( Vertex_12, 'Vertex_12' )
geompy.addToStudy( Vertex_7, 'Vertex_7' )
geompy.addToStudy( Line_1, 'Line_1' )
geompy.addToStudy( Line_2, 'Line_2' )
geompy.addToStudy( Line_3, 'Line_3' )
geompy.addToStudy( Line_4, 'Line_4' )
geompy.addToStudy( Line_5, 'Line_5' )
geompy.addToStudy( Line_6, 'Line_6' )
geompy.addToStudy( Line_7, 'Line_7' )
geompy.addToStudy( Line_8, 'Line_8' )
geompy.addToStudy( Line_9, 'Line_9' )
geompy.addToStudy( Line_10, 'Line_10' )
geompy.addToStudy( Line_11, 'Line_11' )
geompy.addToStudy( Line_12, 'Line_12' )
geompy.addToStudy( Line_13, 'Line_13' )
geompy.addToStudy( Line_14, 'Line_14' )
geompy.addToStudy( Line_15, 'Line_15' )
geompy.addToStudy( Line_16, 'Line_16' )
geompy.addToStudy( Face_1, 'Face_1' )
geompy.addToStudy( Face_2, 'Face_2' )
geompy.addToStudy( Face_3, 'Face_3' )
geompy.addToStudy( Face_4, 'Face_4' )
geompy.addToStudy( Face_5, 'Face_5' )
geompy.addToStudy( faces_to_extrude, 'faces_to_extrude' )
geompy.addToStudy( Extrusion_6, 'Extrusion_6' )
geompy.addToStudyInFather( Extrusion_6, camera, 'camera' )
geompy.addToStudyInFather( Extrusion_6, canale, 'canale' )
geompy.addToStudyInFather( Extrusion_6, cut1, 'cut1' )
geompy.addToStudyInFather( Extrusion_6, symm1, 'symm1' )
geompy.addToStudyInFather( Extrusion_6, symm2, 'symm2' )
geompy.addToStudyInFather( Extrusion_6, cut2, 'cut2' )
geompy.addToStudyInFather( Extrusion_6, long_lines, 'long_lines' )
geompy.addToStudyInFather( Extrusion_6, section_lines, 'section_lines' )
geompy.addToStudyInFather( Extrusion_6, cucrzr_1, 'cucrzr_1' )
geompy.addToStudyInFather( Extrusion_6, cucrzr_2, 'cucrzr_2' )
geompy.addToStudyInFather( Extrusion_6, nickel_1, 'nickel_1' )
geompy.addToStudyInFather( Extrusion_6, cucrzr_3, 'cucrzr_3' )
geompy.addToStudyInFather( Extrusion_6, nickel_2, 'nickel_2' )
geompy.addToStudyInFather( Extrusion_6, seclines, 'seclines' )

###
### SMESH component
###

import  SMESH, SALOMEDS
from salome.smesh import smeshBuilder

smesh = smeshBuilder.New()
#smesh.SetEnablePublish( False ) # Set to False to avoid publish in study if not needed or in some particular situations:
                                 # multiples meshes built in parallel, complex and numerous mesh edition (performance)

Local_Length_1 = smesh.CreateHypothesis('LocalLength')
Local_Length_1.SetLength( 0.1 )
Local_Length_1.SetPrecision( 1e-07 )
Regular_1D = smesh.CreateHypothesis('Regular_1D')
Quadrangle_2D = smesh.CreateHypothesis('Quadrangle_2D')
Hexa_3D = smesh.CreateHypothesis('Hexa_3D')
Local_Length_2 = smesh.CreateHypothesis('LocalLength')
Local_Length_2.SetLength( 0.15 )
Local_Length_2.SetPrecision( 1e-07 )
Mesh_2 = smesh.Mesh(Extrusion_6,'Mesh_2')
status = Mesh_2.AddHypothesis(Regular_1D)
status = Mesh_2.AddHypothesis(Quadrangle_2D)
status = Mesh_2.AddHypothesis(Hexa_3D)
camera_1 = Mesh_2.GroupOnGeom(camera,'camera',SMESH.FACE)
canale_1 = Mesh_2.GroupOnGeom(canale,'canale',SMESH.FACE)
cut1_1 = Mesh_2.GroupOnGeom(cut1,'cut1',SMESH.FACE)
symm1_1 = Mesh_2.GroupOnGeom(symm1,'symm1',SMESH.FACE)
symm2_1 = Mesh_2.GroupOnGeom(symm2,'symm2',SMESH.FACE)
cut2_1 = Mesh_2.GroupOnGeom(cut2,'cut2',SMESH.FACE)
long_lines_1 = Mesh_2.GroupOnGeom(long_lines,'long_lines',SMESH.EDGE)
section_lines_1 = Mesh_2.GroupOnGeom(section_lines,'section_lines',SMESH.EDGE)
Number_of_Segments_1 = smesh.CreateHypothesis('NumberOfSegments')
Number_of_Segments_1.SetNumberOfSegments( 15 )
status = Mesh_2.AddHypothesis(Regular_1D,long_lines)
status = Mesh_2.AddHypothesis(Number_of_Segments_1,long_lines)
Local_Length_3 = smesh.CreateHypothesis('LocalLength')
Local_Length_3.SetLength( 0.1 )
Local_Length_3.SetPrecision( 1e-07 )
smeshObj_1 = Mesh_2.GetSubMesh( section_lines, 'Sub-mesh_2' )
status = Mesh_2.AddHypothesis(Regular_1D,section_lines)
status = Mesh_2.AddHypothesis(Local_Length_3,section_lines)
isDone = Mesh_2.Compute()
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.FACE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,'camera')
aCriteria.append(aCriterion)
aFilter_1 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_1.SetMesh(Mesh_2.GetMesh())
smeshObj_2 = Mesh_2.GroupOnFilter( SMESH.FACE, 'Group_1', aFilter_1 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, smeshObj_2 ] = Mesh_2.GetGroups()
Mesh_2.RemoveGroup( smeshObj_2 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'camera')
aCriteria.append(aCriterion)
aFilter_2 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_2.SetMesh(Mesh_2.GetMesh())
isDone = Mesh_2.Compute()
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
smeshObj_3 = smesh.CreateHypothesis('LocalLength')
smeshObj_4 = smesh.CreateHypothesis('LocalLength')
Local_Length_4 = smesh.CreateHypothesis('LocalLength')
Local_Length_4.SetLength( 0.1 )
Local_Length_4.SetPrecision( 1e-07 )
status = Mesh_2.AddHypothesis(Local_Length_4)
isDone = Mesh_2.Compute()
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'symm1')
aCriteria.append(aCriterion)
aFilter_3 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_3.SetMesh(Mesh_2.GetMesh())
smeshObj_5 = Mesh_2.GroupOnFilter( SMESH.NODE, 'symmetry1', aFilter_3 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, smeshObj_5 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'symm2')
aCriteria.append(aCriterion)
aFilter_4 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_4.SetMesh(Mesh_2.GetMesh())
smeshObj_6 = Mesh_2.GroupOnFilter( SMESH.NODE, 'symmetry2', aFilter_4 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, smeshObj_5, smeshObj_6 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'cut1')
aCriteria.append(aCriterion)
aFilter_5 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_5.SetMesh(Mesh_2.GetMesh())
smeshObj_7 = Mesh_2.GroupOnFilter( SMESH.NODE, 'cut_surf1', aFilter_5 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, smeshObj_5, smeshObj_6, smeshObj_7 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'cut2')
aCriteria.append(aCriterion)
aFilter_6 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_6.SetMesh(Mesh_2.GetMesh())
smeshObj_8 = Mesh_2.GroupOnFilter( SMESH.NODE, 'cut_surf2', aFilter_6 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, smeshObj_5, smeshObj_6, smeshObj_7, smeshObj_8 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'camera')
aCriteria.append(aCriterion)
aFilter_7 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_7.SetMesh(Mesh_2.GetMesh())
smeshObj_9 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'Group_1', aFilter_7 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, smeshObj_5, smeshObj_6, smeshObj_7, smeshObj_8, smeshObj_9 ] = Mesh_2.GetGroups()
smeshObj_9.SetName( 'camera_hot' )
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_LyingOnGeom,SMESH.FT_Undefined,'canale')
aCriteria.append(aCriterion)
aFilter_8 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_8.SetMesh(Mesh_2.GetMesh())
smeshObj_10 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'canale_cold', aFilter_8 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, smeshObj_5, smeshObj_6, smeshObj_7, smeshObj_8, smeshObj_9, smeshObj_10 ] = Mesh_2.GetGroups()
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cut1)
aCriteria.append(aCriterion)
aFilter_9 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_9.SetMesh(Mesh_2.GetMesh())
cut_nodes1 = Mesh_2.GroupOnFilter( SMESH.NODE, 'cut_nodes1', aFilter_9 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cut2)
aCriteria.append(aCriterion)
aFilter_10 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_10.SetMesh(Mesh_2.GetMesh())
cut_nodes2 = Mesh_2.GroupOnFilter( SMESH.NODE, 'cut_nodes2', aFilter_10 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cucrzr_1)
aCriteria.append(aCriterion)
aFilter_11 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_11.SetMesh(Mesh_2.GetMesh())
cucrzr_1_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'cucrzr_1', aFilter_11 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cucrzr_2)
aCriteria.append(aCriterion)
aFilter_12 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_12.SetMesh(Mesh_2.GetMesh())
cucrzr_2_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'cucrzr_2', aFilter_12 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,cucrzr_3)
aCriteria.append(aCriterion)
aFilter_13 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_13.SetMesh(Mesh_2.GetMesh())
cucrzr_3_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'cucrzr_3', aFilter_13 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,nickel_1)
aCriteria.append(aCriterion)
aFilter_14 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_14.SetMesh(Mesh_2.GetMesh())
nickel_1_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'nickel_1', aFilter_14 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.VOLUME,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,nickel_2)
aCriteria.append(aCriterion)
aFilter_15 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_15.SetMesh(Mesh_2.GetMesh())
nickel_2_1 = Mesh_2.GroupOnFilter( SMESH.VOLUME, 'nickel_2', aFilter_15 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,symm1)
aCriteria.append(aCriterion)
aFilter_16 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_16.SetMesh(Mesh_2.GetMesh())
symm_nodes1 = Mesh_2.GroupOnFilter( SMESH.NODE, 'symm_nodes1', aFilter_16 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1 ] = Mesh_2.GetGroups()
aCriteria = []
aCriterion = smesh.GetCriterion(SMESH.NODE,SMESH.FT_BelongToGeom,SMESH.FT_Undefined,symm2)
aCriteria.append(aCriterion)
aFilter_17 = smesh.GetFilterFromCriteria(aCriteria)
aFilter_17.SetMesh(Mesh_2.GetMesh())
symm_nodes2 = Mesh_2.GroupOnFilter( SMESH.NODE, 'symm_nodes2', aFilter_17 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
coincident_nodes_on_part = Mesh_2.FindCoincidentNodesOnPart( [ Mesh_2 ], 1e-06, [], 0 )
Mesh_2.MergeNodes([[ 1, 9 ], [ 2, 10 ], [ 5, 19 ], [ 6, 20 ], [ 7, 15, 17 ], [ 8, 16, 18 ], [ 21, 25 ], [ 22, 26 ], [ 23, 27, 33 ], [ 24, 28, 34 ], [ 29, 39 ], [ 30, 40 ], [ 41, 145 ], [ 42, 146 ], [ 43, 147 ], [ 44, 148 ], [ 45, 149 ], [ 46, 150 ], [ 47, 151 ], [ 48, 152 ], [ 49, 153 ], [ 50, 154 ], [ 51, 155 ], [ 52, 156 ], [ 53, 157 ], [ 54, 158 ], [ 77, 263 ], [ 78, 264 ], [ 79, 265 ], [ 80, 266 ], [ 81, 267 ], [ 82, 268 ], [ 83, 269 ], [ 84, 270 ], [ 85, 271 ], [ 86, 272 ], [ 87, 273 ], [ 88, 274 ], [ 89, 275 ], [ 90, 276 ], [ 107, 211, 249 ], [ 108, 212, 250 ], [ 109, 213, 251 ], [ 110, 214, 252 ], [ 111, 215, 253 ], [ 112, 216, 254 ], [ 113, 217, 255 ], [ 114, 218, 256 ], [ 115, 219, 257 ], [ 116, 220, 258 ], [ 117, 221, 259 ], [ 118, 222, 260 ], [ 119, 223, 261 ], [ 120, 224, 262 ], [ 121, 277 ], [ 122, 278 ], [ 123, 279 ], [ 124, 280 ], [ 125, 281 ], [ 126, 282 ], [ 127, 283 ], [ 128, 284 ], [ 129, 233 ], [ 130, 234 ], [ 131, 235 ], [ 132, 236 ], [ 133, 237 ], [ 134, 238 ], [ 135, 239 ], [ 136, 240 ], [ 137, 241 ], [ 138, 242 ], [ 139, 243 ], [ 140, 244 ], [ 141, 245 ], [ 142, 246 ], [ 143, 247 ], [ 144, 248 ], [ 285, 381 ], [ 286, 382 ], [ 287, 383 ], [ 288, 384 ], [ 289, 385 ], [ 290, 386 ], [ 291, 387 ], [ 292, 388 ], [ 293, 389 ], [ 294, 390 ], [ 295, 391 ], [ 296, 392 ], [ 297, 393 ], [ 298, 394 ], [ 319, 395, 529 ], [ 320, 396, 530 ], [ 321, 397, 531 ], [ 322, 398, 532 ], [ 323, 399, 533 ], [ 324, 400, 534 ], [ 325, 401, 535 ], [ 326, 402, 536 ], [ 327, 403, 537 ], [ 328, 404, 538 ], [ 329, 405, 539 ], [ 330, 406, 540 ], [ 331, 407, 541 ], [ 332, 408, 542 ], [ 333, 409 ], [ 334, 410 ], [ 335, 411 ], [ 336, 412 ], [ 337, 413 ], [ 338, 414 ], [ 339, 415 ], [ 340, 416 ], [ 417, 613 ], [ 418, 614 ], [ 419, 615 ], [ 420, 616 ], [ 421, 617 ], [ 422, 618 ], [ 423, 619 ], [ 424, 620 ], [ 425, 621 ], [ 426, 622 ], [ 427, 623 ], [ 428, 624 ], [ 429, 625 ], [ 430, 626 ], [ 431, 635 ], [ 432, 636 ], [ 433, 637 ], [ 434, 638 ], [ 435, 639 ], [ 436, 640 ], [ 437, 641 ], [ 438, 642 ], [ 439, 643 ], [ 440, 644 ], [ 441, 645 ], [ 442, 646 ], [ 443, 647 ], [ 444, 648 ], [ 445, 649 ], [ 446, 650 ], [ 447, 651 ], [ 448, 652 ], [ 449, 653 ], [ 450, 654 ], [ 451, 655 ], [ 452, 656 ], [ 453, 657 ], [ 454, 658 ], [ 455, 659 ], [ 456, 660 ], [ 457, 661 ], [ 458, 662 ], [ 459, 663 ], [ 460, 664 ], [ 461, 665 ], [ 462, 666 ], [ 463, 667 ], [ 464, 668 ], [ 465, 669 ], [ 466, 670 ], [ 467, 671 ], [ 468, 672 ], [ 841, 1525 ], [ 842, 1526 ], [ 843, 1527 ], [ 844, 1528 ], [ 845, 1521 ], [ 846, 1522 ], [ 847, 1523 ], [ 848, 1524 ], [ 849, 1517 ], [ 850, 1518 ], [ 851, 1519 ], [ 852, 1520 ], [ 853, 1513 ], [ 854, 1514 ], [ 855, 1515 ], [ 856, 1516 ], [ 857, 1509 ], [ 858, 1510 ], [ 859, 1511 ], [ 860, 1512 ], [ 861, 1505 ], [ 862, 1506 ], [ 863, 1507 ], [ 864, 1508 ], [ 865, 1501 ], [ 866, 1502 ], [ 867, 1503 ], [ 868, 1504 ], [ 869, 1497 ], [ 870, 1498 ], [ 871, 1499 ], [ 872, 1500 ], [ 873, 1493 ], [ 874, 1494 ], [ 875, 1495 ], [ 876, 1496 ], [ 877, 1489 ], [ 878, 1490 ], [ 879, 1491 ], [ 880, 1492 ], [ 881, 1485 ], [ 882, 1486 ], [ 883, 1487 ], [ 884, 1488 ], [ 885, 1481 ], [ 886, 1482 ], [ 887, 1483 ], [ 888, 1484 ], [ 889, 1477 ], [ 890, 1478 ], [ 891, 1479 ], [ 892, 1480 ], [ 893, 1473 ], [ 894, 1474 ], [ 895, 1475 ], [ 896, 1476 ], [ 897, 1401 ], [ 898, 1402 ], [ 899, 1403 ], [ 900, 1404 ], [ 901, 1405 ], [ 902, 1406 ], [ 903, 1407 ], [ 904, 1408 ], [ 905, 1393 ], [ 906, 1394 ], [ 907, 1395 ], [ 908, 1396 ], [ 909, 1397 ], [ 910, 1398 ], [ 911, 1399 ], [ 912, 1400 ], [ 913, 1385 ], [ 914, 1386 ], [ 915, 1387 ], [ 916, 1388 ], [ 917, 1389 ], [ 918, 1390 ], [ 919, 1391 ], [ 920, 1392 ], [ 921, 1377 ], [ 922, 1378 ], [ 923, 1379 ], [ 924, 1380 ], [ 925, 1381 ], [ 926, 1382 ], [ 927, 1383 ], [ 928, 1384 ], [ 929, 1369 ], [ 930, 1370 ], [ 931, 1371 ], [ 932, 1372 ], [ 933, 1373 ], [ 934, 1374 ], [ 935, 1375 ], [ 936, 1376 ], [ 937, 1361 ], [ 938, 1362 ], [ 939, 1363 ], [ 940, 1364 ], [ 941, 1365 ], [ 942, 1366 ], [ 943, 1367 ], [ 944, 1368 ], [ 945, 1353 ], [ 946, 1354 ], [ 947, 1355 ], [ 948, 1356 ], [ 949, 1357 ], [ 950, 1358 ], [ 951, 1359 ], [ 952, 1360 ], [ 953, 1345 ], [ 954, 1346 ], [ 955, 1347 ], [ 956, 1348 ], [ 957, 1349 ], [ 958, 1350 ], [ 959, 1351 ], [ 960, 1352 ], [ 961, 1337 ], [ 962, 1338 ], [ 963, 1339 ], [ 964, 1340 ], [ 965, 1341 ], [ 966, 1342 ], [ 967, 1343 ], [ 968, 1344 ], [ 969, 1329 ], [ 970, 1330 ], [ 971, 1331 ], [ 972, 1332 ], [ 973, 1333 ], [ 974, 1334 ], [ 975, 1335 ], [ 976, 1336 ], [ 977, 1321 ], [ 978, 1322 ], [ 979, 1323 ], [ 980, 1324 ], [ 981, 1325 ], [ 982, 1326 ], [ 983, 1327 ], [ 984, 1328 ], [ 985, 1313 ], [ 986, 1314 ], [ 987, 1315 ], [ 988, 1316 ], [ 989, 1317 ], [ 990, 1318 ], [ 991, 1319 ], [ 992, 1320 ], [ 993, 1305 ], [ 994, 1306 ], [ 995, 1307 ], [ 996, 1308 ], [ 997, 1309 ], [ 998, 1310 ], [ 999, 1311 ], [ 1000, 1312 ], [ 1001, 1297 ], [ 1002, 1298 ], [ 1003, 1299 ], [ 1004, 1300 ], [ 1005, 1301 ], [ 1006, 1302 ], [ 1007, 1303 ], [ 1008, 1304 ], [ 1529, 1997 ], [ 1530, 1998 ], [ 1531, 1999 ], [ 1532, 2000 ], [ 1533, 1993 ], [ 1534, 1994 ], [ 1535, 1995 ], [ 1536, 1996 ], [ 1537, 1989 ], [ 1538, 1990 ], [ 1539, 1991 ], [ 1540, 1992 ], [ 1541, 1985 ], [ 1542, 1986 ], [ 1543, 1987 ], [ 1544, 1988 ], [ 1545, 1981 ], [ 1546, 1982 ], [ 1547, 1983 ], [ 1548, 1984 ], [ 1549, 1977 ], [ 1550, 1978 ], [ 1551, 1979 ], [ 1552, 1980 ], [ 1553, 1973 ], [ 1554, 1974 ], [ 1555, 1975 ], [ 1556, 1976 ], [ 1557, 1969 ], [ 1558, 1970 ], [ 1559, 1971 ], [ 1560, 1972 ], [ 1561, 1965 ], [ 1562, 1966 ], [ 1563, 1967 ], [ 1564, 1968 ], [ 1565, 1961 ], [ 1566, 1962 ], [ 1567, 1963 ], [ 1568, 1964 ], [ 1569, 1957 ], [ 1570, 1958 ], [ 1571, 1959 ], [ 1572, 1960 ], [ 1573, 1953 ], [ 1574, 1954 ], [ 1575, 1955 ], [ 1576, 1956 ], [ 1577, 1949 ], [ 1578, 1950 ], [ 1579, 1951 ], [ 1580, 1952 ], [ 1581, 1945 ], [ 1582, 1946 ], [ 1583, 1947 ], [ 1584, 1948 ], [ 2001, 3310 ], [ 2002, 3311 ], [ 2003, 3312 ], [ 2004, 3313 ], [ 2005, 3314 ], [ 2006, 3315 ], [ 2007, 3316 ], [ 2008, 3317 ], [ 2009, 3318 ], [ 2010, 3319 ], [ 2011, 3320 ], [ 2012, 3321 ], [ 2013, 3322 ], [ 2014, 3323 ], [ 2015, 3324 ], [ 2016, 3325 ], [ 2017, 3326 ], [ 2018, 3327 ], [ 2019, 3328 ], [ 2020, 3291 ], [ 2021, 3292 ], [ 2022, 3293 ], [ 2023, 3294 ], [ 2024, 3295 ], [ 2025, 3296 ], [ 2026, 3297 ], [ 2027, 3298 ], [ 2028, 3299 ], [ 2029, 3300 ], [ 2030, 3301 ], [ 2031, 3302 ], [ 2032, 3303 ], [ 2033, 3304 ], [ 2034, 3305 ], [ 2035, 3306 ], [ 2036, 3307 ], [ 2037, 3308 ], [ 2038, 3309 ], [ 2039, 3272 ], [ 2040, 3273 ], [ 2041, 3274 ], [ 2042, 3275 ], [ 2043, 3276 ], [ 2044, 3277 ], [ 2045, 3278 ], [ 2046, 3279 ], [ 2047, 3280 ], [ 2048, 3281 ], [ 2049, 3282 ], [ 2050, 3283 ], [ 2051, 3284 ], [ 2052, 3285 ], [ 2053, 3286 ], [ 2054, 3287 ], [ 2055, 3288 ], [ 2056, 3289 ], [ 2057, 3290 ], [ 2058, 3253 ], [ 2059, 3254 ], [ 2060, 3255 ], [ 2061, 3256 ], [ 2062, 3257 ], [ 2063, 3258 ], [ 2064, 3259 ], [ 2065, 3260 ], [ 2066, 3261 ], [ 2067, 3262 ], [ 2068, 3263 ], [ 2069, 3264 ], [ 2070, 3265 ], [ 2071, 3266 ], [ 2072, 3267 ], [ 2073, 3268 ], [ 2074, 3269 ], [ 2075, 3270 ], [ 2076, 3271 ], [ 2077, 3234 ], [ 2078, 3235 ], [ 2079, 3236 ], [ 2080, 3237 ], [ 2081, 3238 ], [ 2082, 3239 ], [ 2083, 3240 ], [ 2084, 3241 ], [ 2085, 3242 ], [ 2086, 3243 ], [ 2087, 3244 ], [ 2088, 3245 ], [ 2089, 3246 ], [ 2090, 3247 ], [ 2091, 3248 ], [ 2092, 3249 ], [ 2093, 3250 ], [ 2094, 3251 ], [ 2095, 3252 ], [ 2096, 3215 ], [ 2097, 3216 ], [ 2098, 3217 ], [ 2099, 3218 ], [ 2100, 3219 ], [ 2101, 3220 ], [ 2102, 3221 ], [ 2103, 3222 ], [ 2104, 3223 ], [ 2105, 3224 ], [ 2106, 3225 ], [ 2107, 3226 ], [ 2108, 3227 ], [ 2109, 3228 ], [ 2110, 3229 ], [ 2111, 3230 ], [ 2112, 3231 ], [ 2113, 3232 ], [ 2114, 3233 ], [ 2115, 3196 ], [ 2116, 3197 ], [ 2117, 3198 ], [ 2118, 3199 ], [ 2119, 3200 ], [ 2120, 3201 ], [ 2121, 3202 ], [ 2122, 3203 ], [ 2123, 3204 ], [ 2124, 3205 ], [ 2125, 3206 ], [ 2126, 3207 ], [ 2127, 3208 ], [ 2128, 3209 ], [ 2129, 3210 ], [ 2130, 3211 ], [ 2131, 3212 ], [ 2132, 3213 ], [ 2133, 3214 ], [ 2134, 3177 ], [ 2135, 3178 ], [ 2136, 3179 ], [ 2137, 3180 ], [ 2138, 3181 ], [ 2139, 3182 ], [ 2140, 3183 ], [ 2141, 3184 ], [ 2142, 3185 ], [ 2143, 3186 ], [ 2144, 3187 ], [ 2145, 3188 ], [ 2146, 3189 ], [ 2147, 3190 ], [ 2148, 3191 ], [ 2149, 3192 ], [ 2150, 3193 ], [ 2151, 3194 ], [ 2152, 3195 ], [ 2153, 3158 ], [ 2154, 3159 ], [ 2155, 3160 ], [ 2156, 3161 ], [ 2157, 3162 ], [ 2158, 3163 ], [ 2159, 3164 ], [ 2160, 3165 ], [ 2161, 3166 ], [ 2162, 3167 ], [ 2163, 3168 ], [ 2164, 3169 ], [ 2165, 3170 ], [ 2166, 3171 ], [ 2167, 3172 ], [ 2168, 3173 ], [ 2169, 3174 ], [ 2170, 3175 ], [ 2171, 3176 ], [ 2172, 3139 ], [ 2173, 3140 ], [ 2174, 3141 ], [ 2175, 3142 ], [ 2176, 3143 ], [ 2177, 3144 ], [ 2178, 3145 ], [ 2179, 3146 ], [ 2180, 3147 ], [ 2181, 3148 ], [ 2182, 3149 ], [ 2183, 3150 ], [ 2184, 3151 ], [ 2185, 3152 ], [ 2186, 3153 ], [ 2187, 3154 ], [ 2188, 3155 ], [ 2189, 3156 ], [ 2190, 3157 ], [ 2191, 3120 ], [ 2192, 3121 ], [ 2193, 3122 ], [ 2194, 3123 ], [ 2195, 3124 ], [ 2196, 3125 ], [ 2197, 3126 ], [ 2198, 3127 ], [ 2199, 3128 ], [ 2200, 3129 ], [ 2201, 3130 ], [ 2202, 3131 ], [ 2203, 3132 ], [ 2204, 3133 ], [ 2205, 3134 ], [ 2206, 3135 ], [ 2207, 3136 ], [ 2208, 3137 ], [ 2209, 3138 ], [ 2210, 3101 ], [ 2211, 3102 ], [ 2212, 3103 ], [ 2213, 3104 ], [ 2214, 3105 ], [ 2215, 3106 ], [ 2216, 3107 ], [ 2217, 3108 ], [ 2218, 3109 ], [ 2219, 3110 ], [ 2220, 3111 ], [ 2221, 3112 ], [ 2222, 3113 ], [ 2223, 3114 ], [ 2224, 3115 ], [ 2225, 3116 ], [ 2226, 3117 ], [ 2227, 3118 ], [ 2228, 3119 ], [ 2229, 3082 ], [ 2230, 3083 ], [ 2231, 3084 ], [ 2232, 3085 ], [ 2233, 3086 ], [ 2234, 3087 ], [ 2235, 3088 ], [ 2236, 3089 ], [ 2237, 3090 ], [ 2238, 3091 ], [ 2239, 3092 ], [ 2240, 3093 ], [ 2241, 3094 ], [ 2242, 3095 ], [ 2243, 3096 ], [ 2244, 3097 ], [ 2245, 3098 ], [ 2246, 3099 ], [ 2247, 3100 ], [ 2248, 3063 ], [ 2249, 3064 ], [ 2250, 3065 ], [ 2251, 3066 ], [ 2252, 3067 ], [ 2253, 3068 ], [ 2254, 3069 ], [ 2255, 3070 ], [ 2256, 3071 ], [ 2257, 3072 ], [ 2258, 3073 ], [ 2259, 3074 ], [ 2260, 3075 ], [ 2261, 3076 ], [ 2262, 3077 ], [ 2263, 3078 ], [ 2264, 3079 ], [ 2265, 3080 ], [ 2266, 3081 ]], [], 1)
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
try:
  Mesh_2.ExportUNV( r'/media/sf_condiviso_VM/hyprob/Mesh_4.unv' )
  pass
except:
  print('ExportUNV() failed. Invalid file name?')
Local_Length_5 = smesh.CreateHypothesis('LocalLength')
Local_Length_5.SetLength( 0.05 )
Local_Length_5.SetPrecision( 1e-07 )
Sub_mesh_3 = Mesh_2.GetSubMesh( seclines, 'Sub-mesh_3' )
status = Mesh_2.AddHypothesis(Regular_1D,seclines)
status = Mesh_2.AddHypothesis(Local_Length_5,seclines)
isDone = Mesh_2.SetMeshOrder( [ [ smeshObj_1, Sub_mesh_3 ] ])
Mesh_2.GetMesh().RemoveSubMesh( smeshObj_1 )
isDone = Mesh_2.Compute()
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
Number_of_Segments_2 = smesh.CreateHypothesis('NumberOfSegments')
Number_of_Segments_2.SetNumberOfSegments( 40 )
status = Mesh_2.RemoveHypothesis(Number_of_Segments_1,long_lines)
status = Mesh_2.AddHypothesis(Number_of_Segments_2,long_lines)
isDone = Mesh_2.Compute()
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
Mesh_2.SetAutoColor( 1 )
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
camera_1.SetColor( SALOMEDS.Color( 0.396078, 0.8, 0.396078 ))
canale_1.SetColor( SALOMEDS.Color( 0.396078, 0.8, 0.8 ))
cut1_1.SetColor( SALOMEDS.Color( 0.396078, 0.396078, 0.8 ))
symm1_1.SetColor( SALOMEDS.Color( 0.8, 0.396078, 0.8 ))
symm2_1.SetColor( SALOMEDS.Color( 0.6, 0.298039, 0.298039 ))
cut2_1.SetColor( SALOMEDS.Color( 0.6, 0.6, 0.298039 ))
long_lines_1.SetColor( SALOMEDS.Color( 0.298039, 0.6, 0.298039 ))
section_lines_1.SetColor( SALOMEDS.Color( 0.298039, 0.6, 0.6 ))
cut_nodes1.SetColor( SALOMEDS.Color( 0.298039, 0.298039, 0.6 ))
cut_nodes2.SetColor( SALOMEDS.Color( 0.6, 0.298039, 0.6 ))
cucrzr_1_1.SetColor( SALOMEDS.Color( 0.4, 0.2, 0.2 ))
cucrzr_2_1.SetColor( SALOMEDS.Color( 0.4, 0.4, 0.2 ))
cucrzr_3_1.SetColor( SALOMEDS.Color( 0.2, 0.4, 0.2 ))
nickel_1_1.SetColor( SALOMEDS.Color( 0.2, 0.4, 0.4 ))
nickel_2_1.SetColor( SALOMEDS.Color( 0.2, 0.2, 0.4 ))
symm_nodes1.SetColor( SALOMEDS.Color( 0.4, 0.2, 0.4 ))
symm_nodes2.SetColor( SALOMEDS.Color( 1, 0, 0 ))
Mesh_2.Clear()
isDone = Mesh_2.Compute()
[ camera_1, canale_1, cut1_1, symm1_1, symm2_1, cut2_1, long_lines_1, section_lines_1, cut_nodes1, cut_nodes2, cucrzr_1_1, cucrzr_2_1, cucrzr_3_1, nickel_1_1, nickel_2_1, symm_nodes1, symm_nodes2 ] = Mesh_2.GetGroups()
Sub_mesh_1 = Mesh_2.GetSubMesh( long_lines, 'Sub-mesh_1' )

## some objects were removed
aStudyBuilder = salome.myStudy.NewBuilder()
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_8))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_5))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_9))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_7))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_10))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_6))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_4))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_3))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_1))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)
SO = salome.myStudy.FindObjectIOR(salome.myStudy.ConvertObjectToIOR(smeshObj_2))
if SO: aStudyBuilder.RemoveObjectWithChildren(SO)

## Set names of Mesh objects
smesh.SetName(long_lines_1, 'long_lines')
smesh.SetName(symm_nodes2, 'symm_nodes2')
smesh.SetName(cut_nodes1, 'cut_nodes1')
smesh.SetName(Regular_1D, 'Regular_1D')
smesh.SetName(symm_nodes1, 'symm_nodes1')
smesh.SetName(Hexa_3D, 'Hexa_3D')
smesh.SetName(cut_nodes2, 'cut_nodes2')
smesh.SetName(Quadrangle_2D, 'Quadrangle_2D')
smesh.SetName(Local_Length_2, 'Local Length_2')
smesh.SetName(Number_of_Segments_1, 'Number of Segments_1')
smesh.SetName(Local_Length_1, 'Local Length_1')
smesh.SetName(cucrzr_1_1, 'cucrzr_1')
smesh.SetName(cucrzr_2_1, 'cucrzr_2')
smesh.SetName(Local_Length_4, 'Local Length_4')
smesh.SetName(cucrzr_3_1, 'cucrzr_3')
smesh.SetName(Local_Length_3, 'Local Length_3')
smesh.SetName(nickel_1_1, 'nickel_1')
smesh.SetName(nickel_2_1, 'nickel_2')
smesh.SetName(Local_Length_5, 'Local Length_5')
smesh.SetName(Number_of_Segments_2, 'Number of Segments_2')
smesh.SetName(Sub_mesh_1, 'Sub-mesh_1')
smesh.SetName(Sub_mesh_3, 'Sub-mesh_3')
smesh.SetName(Mesh_2.GetMesh(), 'Mesh_2')
smesh.SetName(cut2_1, 'cut2')
smesh.SetName(symm2_1, 'symm2')
smesh.SetName(symm1_1, 'symm1')
smesh.SetName(cut1_1, 'cut1')
smesh.SetName(canale_1, 'canale')
smesh.SetName(camera_1, 'camera')
smesh.SetName(section_lines_1, 'section_lines')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser()
